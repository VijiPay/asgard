services:
  asgard:
    container_name: asgard
    build: .
    ports:
      - "4343:4343"
    env_file:
      - ${ENV_FILE:-.noenv}
    environment:
      - NODE_ENV=${NODE_ENV}
      - HOST=0.0.0.0
    depends_on:
      asgard_db:
        condition: service_healthy
      asgard_cache:
        condition: service_started
    networks:
      - asgard-net
    volumes:
      - .:/asgard
      - /asgard/node_modules
    command: >
      sh -c "
      if [ \"$RUN_MIGRATIONS\" = \"true\" ]; then
          echo 'Running migrations...';
          node ace migration:run --force;
      else
          echo 'Skipping migrations.';
      fi &&
      npm start
      " 

  asgard_db:
    container_name: asgard_db
    image: postgres:15-alpine
    ports:
      - 5800:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - asgard-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5

  asgard_cache:
    container_name: asgard_cache
    image: redis:7-alpine
    ports:
      - 6385:6379
    volumes:
      - cache-data:/data
    networks:
      - asgard-net

networks:
  asgard-net:
    driver: bridge

volumes:
  db-data:
  cache-data:
