name: CICD

on:
  push:
    branches:
      - develop
      - main
env:
  AWS_REGION: ${{vars.AWS_REGION}}
  ECR_REPOSITORY: ${{vars.ECR_REPOSITORY}}
  ECS_SERVICE: ${{vars.ECS_SERVICE}}
  ECS_CLUSTER: ${{vars.ECS_CLUSTER}}
  ECS_TASK_DEFINITION: ./task-definition.json
  CONTAINER_NAME: ${{vars.CONTAINER_NAME}}
  
jobs:
  deploy:
    name: Build, Test and Deploy ðŸš€
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Run Tests
        run: |
            npm ci --frozen-lockfile
            node ace build
            npm run lint
            
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Set outputs
        id: vars
        run: |
            echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          GIT_SHA: ${{ steps.vars.outputs.GIT_SHA }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        run: |
          if [ -z "$ECR_REPOSITORY" ]; then
            echo "ECR_REPOSITORY is not set. Please check your workflow configuration."
            exit 1
          fi
          docker build --build-arg GIT_SHA=$GIT_SHA -t $ECR_REGISTRY/$ECR_REPOSITORY:$GIT_SHA .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$GIT_SHA $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GIT_SHA
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$GIT_SHA" >> $GITHUB_OUTPUT          

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ vars.ECS_TASK_DEFINITION }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true