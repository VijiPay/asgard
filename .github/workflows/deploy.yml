name: CICD

on:
  push:
    branches:
      - develop
      - main
env:
  AWS_REGION: ${{vars.AWS_REGION}}
  ECR_REPOSITORY: ${{vars.ECR_REPOSITORY}}
  ECS_SERVICE: ${{vars.ECS_SERVICE}}
  ECS_CLUSTER: ${{vars.ECS_CLUSTER}}
  CONTAINER_NAME: ${{vars.CONTAINER_NAME}}
  
jobs:
  deploy:
    name: Lint, Test and Deploy ðŸš€
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Run Tests
        run: |
            npm ci --frozen-lockfile
            node ace build
            npm run lint
            
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}


      - name: Setup pnpm and Project Dependencies
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]
            - args: [--global, typescript]
      
      - name: Generate Prisma Client
        run: pnpm prisma generate --schema=./prisma/
      
      - name: Lint
        run: pnpm lint

      - name: Build Project
        run: pnpm build
      
      - name: Build Image
        run: docker build -t asgard .   